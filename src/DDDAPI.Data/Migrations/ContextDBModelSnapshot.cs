// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using DDDAPI.Data.Context;

namespace Data.Migrations
{
    [DbContext(typeof(ContextDB))]
    partial class ContextDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("DDDAPI.Domain.Entities.CEPEntity", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<uint>("MunicipioId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CEP");

                    b.HasIndex("MunicipioId");

                    b.ToTable("cep");
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.ItemEntity", b =>
                {
                    b.Property<uint>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("CEST")
                        .HasColumnType("longtext");

                    b.Property<string>("CodigoBarras")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataEdicao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NCM")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NCM_EX")
                        .HasColumnType("longtext");

                    b.Property<uint>("UsuarioCadastro_codigo")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("UsuarioEdicao_codigo")
                        .HasColumnType("int unsigned");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoBarras")
                        .IsUnique();

                    b.HasIndex("DataCadastro");

                    b.HasIndex("DataEdicao");

                    b.HasIndex("Descricao");

                    b.HasIndex("NCM");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.ItemICMSEntity", b =>
                {
                    b.Property<uint>("Item_codigo")
                        .HasColumnType("int unsigned");

                    b.Property<string>("UF")
                        .HasColumnType("varchar(255)");

                    b.Property<uint?>("ItemEntityCodigo")
                        .HasColumnType("int unsigned");

                    b.HasKey("Item_codigo", "UF");

                    b.HasIndex("ItemEntityCodigo");

                    b.ToTable("ItemICMS");
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.ItemPisCofinsEntity", b =>
                {
                    b.Property<uint>("Item_codigo")
                        .HasColumnType("int unsigned");

                    b.Property<string>("CST")
                        .HasColumnType("longtext");

                    b.Property<string>("CodigoReceita")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataEdicao")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("PCofinsCumulativo")
                        .HasColumnType("double");

                    b.Property<double>("PCofinsNaoCumulativo")
                        .HasColumnType("double");

                    b.Property<string>("PPisCofinsCumulativo_FundamentoLegal")
                        .HasColumnType("longtext");

                    b.Property<string>("PPisCofinsNaoCumulativo_FundamentoLegal")
                        .HasColumnType("longtext");

                    b.Property<double>("PPisCumulativo")
                        .HasColumnType("double");

                    b.Property<double>("PPisNaoCumulativo")
                        .HasColumnType("double");

                    b.Property<uint>("UsuarioEdicao_codigo")
                        .HasColumnType("int unsigned");

                    b.HasKey("Item_codigo");

                    b.ToTable("ItemPisCofins");
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.MunicipioEntity", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<int>("CodIBGE")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<uint>("UFId")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CodIBGE")
                        .IsUnique();

                    b.HasIndex("UFId");

                    b.ToTable("municipio");
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.UFEntity", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("Sigla")
                        .IsUnique();

                    b.ToTable("uf");

                    b.HasData(
                        new
                        {
                            Id = 11u,
                            Nome = "Rondônia",
                            Sigla = "RO"
                        },
                        new
                        {
                            Id = 12u,
                            Nome = "Acre",
                            Sigla = "AC"
                        },
                        new
                        {
                            Id = 13u,
                            Nome = "Amazonas",
                            Sigla = "AM"
                        },
                        new
                        {
                            Id = 14u,
                            Nome = "Roraima",
                            Sigla = "RR"
                        },
                        new
                        {
                            Id = 15u,
                            Nome = "Pará",
                            Sigla = "PA"
                        },
                        new
                        {
                            Id = 16u,
                            Nome = "Amapá",
                            Sigla = "AP"
                        },
                        new
                        {
                            Id = 17u,
                            Nome = "Tocantins",
                            Sigla = "TO"
                        },
                        new
                        {
                            Id = 21u,
                            Nome = "Maranhão",
                            Sigla = "MA"
                        },
                        new
                        {
                            Id = 22u,
                            Nome = "Piauí",
                            Sigla = "PI"
                        },
                        new
                        {
                            Id = 23u,
                            Nome = "Ceará",
                            Sigla = "CE"
                        },
                        new
                        {
                            Id = 24u,
                            Nome = "Rio Grande do Norte",
                            Sigla = "RN"
                        },
                        new
                        {
                            Id = 25u,
                            Nome = "Paraíba",
                            Sigla = "PB"
                        },
                        new
                        {
                            Id = 26u,
                            Nome = "Pernambuco",
                            Sigla = "PE"
                        },
                        new
                        {
                            Id = 27u,
                            Nome = "Alagoas",
                            Sigla = "AL"
                        },
                        new
                        {
                            Id = 28u,
                            Nome = "Sergipe",
                            Sigla = "SE"
                        },
                        new
                        {
                            Id = 29u,
                            Nome = "Bahia",
                            Sigla = "BA"
                        },
                        new
                        {
                            Id = 31u,
                            Nome = "Minas Gerais",
                            Sigla = "MG"
                        },
                        new
                        {
                            Id = 32u,
                            Nome = "Espírito Santo",
                            Sigla = "ES"
                        },
                        new
                        {
                            Id = 33u,
                            Nome = "Rio de Janeiro",
                            Sigla = "RJ"
                        },
                        new
                        {
                            Id = 35u,
                            Nome = "São Paulo",
                            Sigla = "SP"
                        },
                        new
                        {
                            Id = 41u,
                            Nome = "Paraná",
                            Sigla = "PR"
                        },
                        new
                        {
                            Id = 42u,
                            Nome = "Santa Catarina",
                            Sigla = "SC"
                        },
                        new
                        {
                            Id = 43u,
                            Nome = "Rio Grande do Sul",
                            Sigla = "RS"
                        },
                        new
                        {
                            Id = 50u,
                            Nome = "Mato Grosso do Sul",
                            Sigla = "MS"
                        },
                        new
                        {
                            Id = 51u,
                            Nome = "Mato Grosso",
                            Sigla = "MT"
                        },
                        new
                        {
                            Id = 52u,
                            Nome = "Goiás",
                            Sigla = "GO"
                        },
                        new
                        {
                            Id = 53u,
                            Nome = "Distrito Federal",
                            Sigla = "DF"
                        });
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.UsuarioAPIEntity", b =>
                {
                    b.Property<string>("CNPJ")
                        .HasMaxLength(14)
                        .HasColumnType("char(14)")
                        .IsFixedLength(true)
                        .HasComment("CNPJ da empresa contratante do serviço");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)")
                        .HasComment("informa se o usuário está ativo na API");

                    b.Property<bool>("Dados")
                        .HasColumnType("tinyint(1)")
                        .HasComment("Informa se a api retornará os dados adicionais do item nas consultas");

                    b.Property<bool>("Imagens")
                        .HasColumnType("tinyint(1)")
                        .HasComment("informa se a api irá retornar as imagens do item nas consultas");

                    b.Property<string>("Senha")
                        .HasMaxLength(32)
                        .HasColumnType("char(32)")
                        .IsFixedLength(true)
                        .HasComment("Informa a senha do usuário em questão");

                    b.Property<string>("Token")
                        .HasColumnType("longtext")
                        .HasComment("Armazena o token de acesso do usuário em questão");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("char(2)")
                        .IsFixedLength(true)
                        .HasComment("informa UF que o token recebe as informações");

                    b.Property<bool>("UsaSenha")
                        .HasColumnType("tinyint(1)")
                        .HasComment("informa se a API vai exigir a senha desse usuário nas conexões");

                    b.HasKey("CNPJ");

                    b.ToTable("usuarioapi");
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.CEPEntity", b =>
                {
                    b.HasOne("DDDAPI.Domain.Entities.MunicipioEntity", "Municipio")
                        .WithMany("CEPs")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.ItemICMSEntity", b =>
                {
                    b.HasOne("DDDAPI.Domain.Entities.ItemEntity", null)
                        .WithMany("ICMSs")
                        .HasForeignKey("ItemEntityCodigo");
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.ItemPisCofinsEntity", b =>
                {
                    b.HasOne("DDDAPI.Domain.Entities.ItemEntity", "Item")
                        .WithOne("PisCofins")
                        .HasForeignKey("DDDAPI.Domain.Entities.ItemPisCofinsEntity", "Item_codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.MunicipioEntity", b =>
                {
                    b.HasOne("DDDAPI.Domain.Entities.UFEntity", "UF")
                        .WithMany("Municipios")
                        .HasForeignKey("UFId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UF");
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.ItemEntity", b =>
                {
                    b.Navigation("ICMSs");

                    b.Navigation("PisCofins");
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.MunicipioEntity", b =>
                {
                    b.Navigation("CEPs");
                });

            modelBuilder.Entity("DDDAPI.Domain.Entities.UFEntity", b =>
                {
                    b.Navigation("Municipios");
                });
#pragma warning restore 612, 618
        }
    }
}
